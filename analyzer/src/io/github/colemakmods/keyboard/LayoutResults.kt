package io.github.colemakmods.keyboard

/**
 * Holder for all the output results generated by the keyboard layout analyzer
 *
 * Created by steve on 12/01/18.
 */
class LayoutResults(
    val layout: KeyboardLayout,
    val messages: List<String>,
    val keyFreq: HashMap<Key, Double>,
    val fingerFreq: DoubleArray,
    val handAlternation: Double,
    val sameFingerBigrams: List<FingerBigram>,
    val neighbourPenaltyFingerBigrams: List<FingerBigram>,
    val neighbourBenefitFingerBigrams: List<FingerBigram>,
    val fingerEffort: Array<DoubleArray>
) {

    fun totalFingerEffort(): Double {
        val fingerEffortTotal = DoubleArray(3)
        for (i in 0..9) {
            val allEffort =
                fingerEffort[0][i] + fingerEffort[1][i] + fingerEffort[2][i]
            if (fingerEffort[0][i] > 0) {
                fingerEffortTotal[0] += fingerEffort[0][i]
                fingerEffortTotal[1] += fingerEffort[1][i]
                fingerEffortTotal[2] += fingerEffort[2][i]
            }
        }
        return fingerEffortTotal[0] + fingerEffortTotal[1] + fingerEffortTotal[2]
    }
    fun totalSFBEffort(): Double {
        val fingerEffortTotal = DoubleArray(3)
        for (i in 0..9) {
            val allEffort = fingerEffort[0][i] + fingerEffort[1][i] + fingerEffort[2][i]
            if (fingerEffort[0][i] > 0) {
                fingerEffortTotal[0] += fingerEffort[0][i]
                fingerEffortTotal[1] += fingerEffort[1][i]
                fingerEffortTotal[2] += fingerEffort[2][i]
            }
        }
        return fingerEffortTotal[1]
    }
}
